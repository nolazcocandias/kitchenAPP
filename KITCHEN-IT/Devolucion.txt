<!DOCTYPE html>
<html lang="es">
<head>
  <title>Devoluciones Kitchen-It</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <!-- FontAwesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
      margin: 20px;
      background-color: #f6f8fa;
      color: #24292e;
      box-sizing: border-box; /* Incluir padding y borde en el ancho y alto */
    }

    .fixed-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
      background-color: #fff;
      border: 1px solid #d1d5da;
      border-radius: 8px;
      box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.2);
      padding: 10px;
      position: -webkit-sticky; /* Para compatibilidad con Safari */
      position: sticky;
      top: 0;
      z-index: 1000;
    }

    .form-header {
      display: grid;
      grid-template-columns: 1fr;
      gap: 20px;
      background-color: #fff;
      padding: 20px;
      border: 1px solid #d1d5da;
      border-radius: 6px;
      box-shadow: 0 1px 3px rgba(27,31,35,0.12);
      margin-bottom: 20px;
    }

    .table-container {
      max-height: 300px;
      overflow-y: auto;
      margin-bottom: 80px; /* Ajustado para tener en cuenta la altura del pie de página */
      border: 1px solid #d1d5da;
      border-radius: 6px;
      background-color: #fff;
      box-shadow: 0 1px 3px rgba(27,31,35,0.12), 0 8px 24px rgba(27,31,35,0.12);
      position: relative;
    }

    .table-container thead th {
      position: sticky;
      top: 0;
      background-color: #fff;
      z-index: 1;
    }

    .data-table {
      width: 100%;
      border-collapse: collapse;
    }

    .data-table th,
    .data-table td {
      border: 1px solid #e1e4e8;
      padding: 4px;
      text-align: left;
      vertical-align: middle;
      font-size: 12px;
    }

    .data-table th {
      background-color: #f6f8fa;
      font-weight: bold;
      text-align: center;
      padding: 8px;
    }

    input, select {
      width: 100%;
      padding: 4px;
      margin: 0;
      border: 1px solid #d1d5da;
      border-radius: 6px;
      font-size: 12px;
      background-color: #fafbfc;
      color: #24292e;
      height: 30px; /* Añadido para asegurar una altura consistente */
      box-sizing: border-box; /* Asegura que el padding no afecte la altura */
    }

    .number-input {
      width: 60px; /* Ajustado para que se ajuste a la columna de la tabla */
      padding: 2px;
      height: 30px; /* Asegura una altura consistente */
      box-sizing: border-box; /* Asegura que el padding no afecte la altura */
    }

    .add-row-button {
      background-color: #2ea44f;
      color: white;
      border: none;
      border-radius: 50%;
      width: 30px;
      height: 30px;
      font-size: 20px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 1px 3px rgba(27,31,35,0.12);
    }

    .remove-row-button {
      background-color: #dc3545;
      color: white;
      border: none;
      border-radius: 50%;
      width: 20px; /* Ancho reducido */
      height: 20px; /* Altura reducida */
      font-size: 14px; /* Tamaño de fuente reducido */
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto;
    }

    .fixed-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      background-color: #fff;
      padding: 10px 20px;
      border-top: 1px solid #d1d5da;
      box-shadow: 0 -1px 3px rgba(27,31,35,0.12);
      z-index: 1000;
      box-sizing: border-box;
    }

    .footer-buttons {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-left: auto;
    }

    .fixed-footer button {
      background-color: #2ea44f;
      color: #fff;
      border: none;
      padding: 10px 20px;
      border-radius: 6px;
      cursor: pointer;
      font-size: 14px;
      box-sizing: border-box;
    }

    .fixed-footer button:hover {
      background-color: #2c974b;
    }

    /* Personalización de SweetAlert2 */
    .swal2-popup {
      font-size: 14px !important;
      padding: 16px !important;
      background-color: #fff !important;
      color: #24292e !importante;
      border: 1px solid #d1d5da !importante;
      border-radius: 6px !importante;
      width: 300px !importante;
    }

    .swal2-title {
      font-size: 18px !important;
    }

    .swal2-content {
      font-size: 14px !important;
    }

    .swal2-styled.swal2-confirm {
      background-color: #2ea44f !important;
      border: 1px solid rgba(27,31,35,0.15) !important;
      color: #fff !important;
      padding: 6px 12px !important;
      font-size: 12px !important;
    }

    .swal2-styled.swal2-cancel {
      background-color: #d1d5da !important;
      color: #24292e !important;
      padding: 6px 12px !important;
      font-size: 12px !important;
    }

    h2 {
      font-size: 20px; /* Reducir tamaño de fuente */
      text-align: left; /* Alinear a la izquierda */
      font-weight: normal; /* Quitar negrita */
      margin: 0; /* Quitar margen */
    }

    .opaco {
      background-color: #e9ecef; /* Color de fondo opaco */
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <div class="fixed-header">
    <h2>Ingresa Devolucion</h2>
  </div>

  <form id="formDevolucion">
    <div class="form-header">
      <div>
        <label for="fecha">Fecha:</label>
        <input type="date" id="fecha" required>
      </div>
    </div>

    <div class="table-container">
      <table class="data-table">
        <thead>
          <tr>
            <th>SKU</th>
            <th>Descripción</th>
            <th>Estado</th>
            <th>Origen</th>
            <th>Número de Orden</th>
            <th>Cantidad</th>
            <th>Comentario</th>
            <th>Eliminar</th>
          </tr>
        </thead>
        <tbody id="productosTableBody"></tbody>
      </table>
    </div>
  </form>

  <div class="fixed-footer">
    <div>
      <button type="button" class="add-row-button" onclick="agregarFila()">+</button>
    </div>
    <div class="footer-buttons">
      <button type="button" onclick="enviarFormulario()">Guardar</button>
    </div>
  </div>

  <script>
    // Función para establecer la fecha actual en formato DD-MM-YYYY
    function establecerFechaActual() {
      const fechaHoy = new Date();
      const dia = String(fechaHoy.getDate()).padStart(2, '0');
      const mes = String(fechaHoy.getMonth() + 1).padStart(2, '0'); // Los meses son 0-indexados
      const anio = fechaHoy.getFullYear();
      const fechaFormateada = `${anio}-${mes}-${dia}`; // Formato necesario para input type="date"
      document.querySelectorAll('input[type="date"]').forEach(input => {
        input.value = fechaFormateada;
      });
    }

    let descripcionesDisponibles = [];
    const filas = [];

    document.addEventListener("DOMContentLoaded", () => {
      google.script.run
        .withSuccessHandler((result) => {
          descripcionesDisponibles = result;
          agregarFila();
        })
        .obtenerDescripciones();

      // Llamar a la función para establecer la fecha actual
      establecerFechaActual();
    });

    function agregarFila() {
      const tbody = document.getElementById('productosTableBody');
      const newRow = document.createElement('tr');
      const filaIndex = filas.length;

      newRow.innerHTML = `
        <td>
          <input type="text" class="sku opaco" readonly>
        </td>
        <td>
          <select class="descripcion" required onchange="llenarSKU(this)">
            <option value="" disabled selected>-- Selecciona una descripción --</option>
          </select>
        </td>
        <td>
          <select class="estado" required>
            <option value="" disabled selected>-- Selecciona un estado --</option>
            <option value="Bueno">Bueno</option>
            <option value="Usado">Usado</option>
            <option value="Malo">Malo</option>
            <option value="Incompleto">Incompleto</option>
            <option value="Por Identificar">Por Identificar</option>
          </select>
        </td>
        <td>
          <input type="text" class="origen" required>
        </td>
        <td>
          <input type="text" class="numeroOrden" required>
        </td>
        <td>
          <input type="number" class="cantidad number-input" min="1" required>
        </td>
        <td>
          <input type="text" class="comentario" required>
        </td>
        <td style="text-align: center;">
          <button type="button" class="remove-row-button" onclick="eliminarFila(${filaIndex})">×</button>
        </td>
      `;
      tbody.appendChild(newRow);
      filas.push(newRow);

      cargarDescripcionesEnSelector(newRow.querySelector('.descripcion'));
    }

    function eliminarFila(index) {
      if (document.getElementById('productosTableBody').children.length > 1) {
        filas[index].remove();
        filas.splice(index, 1);
      } else {
        Swal.fire('Error', 'Debe mantener al menos una fila', 'error');
      }
    }

    function cargarDescripcionesEnSelector(select) {
      select.innerHTML = '<option value="" disabled selected>-- Selecciona una descripción --</option>';
      descripcionesDisponibles.forEach(descripcion => {
        const opt = document.createElement("option");
        opt.value = descripcion;
        opt.textContent = descripcion;
        select.appendChild(opt);
      });
    }

    function llenarSKU(selectElement) {
      const descripcion = selectElement.value;
      if (descripcion) {
        google.script.run
          .withSuccessHandler((sku) => {
            const fila = selectElement.closest('tr');
            fila.querySelector('.sku').value = sku || "";
          })
          .buscarSKUporDescripcion(descripcion);
      }
    }

    function enviarFormulario() {
      const productos = [];
      filas.forEach(fila => {
        productos.push({
          sku: fila.querySelector('.sku').value,
          descripcion: fila.querySelector('.descripcion').value,
          estado: fila.querySelector('.estado').value,
          origen: fila.querySelector('.origen').value,
          numeroOrden: fila.querySelector('.numeroOrden').value,
          cantidad: fila.querySelector('.cantidad').value,
          comentario: fila.querySelector('.comentario').value
        });
      });

      const datos = {
        fecha: document.getElementById("fecha").value,
        productos: productos
      };

      if (!validarDatos(datos)) {
        return false;
      }

      Swal.fire({
        title: 'Confirmación',
        text: `¿Guardar devolución de ${productos.length} productos?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonText: 'Guardar',
        cancelButtonText: 'Cancelar',
        confirmButtonColor: '#2ea44f',
        cancelButtonColor: '#d1d5da'
      }).then((result) => {
        if (result.isConfirmed) {
          google.script.run
            .withSuccessHandler(() => {
              Swal.fire('¡Guardado!', 'Las devoluciones se ingresaron correctamente.', 'success')
                .then(() => {
                  resetFormulario();
                });
            })
            .withFailureHandler((error) => {
              Swal.fire('Error', error.message || 'Error al procesar la solicitud', 'error');
            })
            .guardarDevolucion(datos);
        }
      });

      return false;
    }

    function validarDatos(datos) {
      if (!datos.fecha || !datos.productos.length) {
        Swal.fire('Error', 'Todos los campos son requeridos', 'error');
        return false;
      }

      for (let producto of datos.productos) {
        if (!producto.descripcion || !producto.estado || !producto.origen || !producto.numeroOrden || !producto.cantidad || !producto.comentario) {
          Swal.fire('Error', 'Complete todos los campos de productos', 'error');
          return false;
        }
      }

      return true;
    }

    function resetFormulario() {
      const fecha = document.getElementById('fecha').value;
      document.getElementById('formDevolucion').reset();
      document.getElementById('fecha').value = fecha;
      document.getElementById('productosTableBody').innerHTML = '';
      filas.length = 0;
      agregarFila();
    }
  </script>
</body>
</html>